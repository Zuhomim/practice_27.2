version: '3'

services:

  redis:
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
    image: redis:5.0.3-alpine
    ports:
      - '6379:6379'


  db:
    image: postgres:16.1-alpine
    environment:
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE_NAME}
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
#    command: -p 5433
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    env_file:
      - .env
    tty: true
    command: python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy

  celery:
    build: .
    env_file:
      - .env
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    env_file:
      - .env
    tty: true
    restart: always
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - app

volumes:
  pg_data: